import type { Video, VideoListResponse, VideoListParams } from "~/types/video";

/**
 * –°–µ—Ä–≤–∏—Å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏
 * –ü–æ–ª—É—á–∞–µ—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export class RecommendationsApi {
  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö –≤–∏–¥–µ–æ
   * @param params - –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ (–ø–∞–≥–∏–Ω–∞—Ü–∏—è)
   * @returns Promise —Å –æ—Ç–≤–µ—Ç–æ–º API
   */
  async getRecommendations(params: VideoListParams = {}): Promise<VideoListResponse> {
    // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–¥–µ—Ä–∂–∫—É —Å–µ—Ç–∏
    await new Promise(resolve => setTimeout(resolve, 300));
    
    const { page = 1, limit = 24 } = params;
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const recommendations = this.generateRecommendations(page, limit);
    
    // –í—ã—á–∏—Å–ª—è–µ–º –ø–∞–≥–∏–Ω–∞—Ü–∏—é
    const totalCount = 1000; // –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π (–±–µ—Å–∫–æ–Ω–µ—á–Ω–æ –º–Ω–æ–≥–æ)
    const totalPages = Math.ceil(totalCount / limit);
    
    return {
      videos: recommendations,
      totalCount,
      currentPage: page,
      totalPages,
      hasNextPage: page < totalPages
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –º–æ–∫–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
   * @param page - –Ω–æ–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã
   * @param limit - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∏–¥–µ–æ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
   * @returns –º–∞—Å—Å–∏–≤ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö –≤–∏–¥–µ–æ
   */
  private generateRecommendations(page: number, limit: number): Video[] {
    const recommendations: Video[] = [];
    const startId = (page - 1) * limit + 1;
    
    const recommendationTitles = [
      "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º: –õ—É—á—à–∏–µ —Ñ–∏–ª—å–º—ã —ç—Ç–æ–≥–æ –≥–æ–¥–∞",
      "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–±–æ—Ä–∫–∞: –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ 2024",
      "–î–ª—è –≤–∞—Å: –ö—É–ª–∏–Ω–∞—Ä–Ω—ã–µ —à–µ–¥–µ–≤—Ä—ã",
      "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º: –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è –ø–æ –º–∏—Ä—É",
      "–í–∞—à–∞ –ø–æ–¥–±–æ—Ä–∫–∞: –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç",
      "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º: –ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ –∫–ª–∏–ø—ã",
      "–î–ª—è –≤–∞—Å: –°–ø–æ—Ä—Ç–∏–≤–Ω—ã–µ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏",
      "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º: –ò–≥—Ä–æ–≤—ã–µ —Å—Ç—Ä–∏–º—ã",
      "–í–∞—à–∞ –ø–æ–¥–±–æ—Ä–∫–∞: –ù–∞—É—á–Ω—ã–µ –æ—Ç–∫—Ä—ã—Ç–∏—è",
      "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º: –ú–æ–¥–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã",
      "–î–ª—è –≤–∞—Å: –ó–¥–æ—Ä–æ–≤—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏",
      "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º: –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞–ª–∫–∏",
      "–í–∞—à–∞ –ø–æ–¥–±–æ—Ä–∫–∞: –ö–æ–º–µ–¥–∏–π–Ω—ã–µ —à–æ—É",
      "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º: –ü—Ä–∏–∫–ª—é—á–µ–Ω—á–µ—Å–∫–∏–µ —Ñ–∏–ª—å–º—ã",
      "–î–ª—è –≤–∞—Å: –ë–∏–∑–Ω–µ—Å –∏ —Ñ–∏–Ω–∞–Ω—Å—ã",
      "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º: –ò—Å–∫—É—Å—Å—Ç–≤–æ –∏ –∫—É–ª—å—Ç—É—Ä–∞",
      "–í–∞—à–∞ –ø–æ–¥–±–æ—Ä–∫–∞: –ü—Ä–∏—Ä–æ–¥–∞ –∏ –∂–∏–≤–æ—Ç–Ω—ã–µ",
      "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º: –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –æ–±–∑–æ—Ä—ã",
      "–î–ª—è –≤–∞—Å: –ú–æ—Ç–∏–≤–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ä–µ—á–∏",
      "–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º: –ù–æ–≤–æ—Å—Ç–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞"
    ];

    const channelNames = [
      "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ AI",
      "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä",
      "–í–∞—à –∫–æ–Ω—Ç–µ–Ω—Ç",
      "–£–º–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏",
      "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–∞—è –ø–æ–¥–±–æ—Ä–∫–∞",
      "–ê–ª–≥–æ—Ä–∏—Ç–º –¥–ª—è –≤–∞—Å",
      "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç",
      "–í–∞—à–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã",
      "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ç–µ–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞",
      "–ò–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç"
    ];

    const thumbnails = [
      "üé¨", "üíª", "üç≥", "‚úàÔ∏è", "üìö", "üéµ", "‚öΩ", "üéÆ", 
      "üî¨", "üëó", "üí™", "üìú", "üòÇ", "üó∫Ô∏è", "üí∞", "üé®", 
      "üåø", "‚öôÔ∏è", "üí°", "üì∞"
    ];

    for (let i = 0; i < limit; i++) {
      const videoId = startId + i;
      const randomTitle = recommendationTitles[Math.floor(Math.random() * recommendationTitles.length)];
      const randomChannel = channelNames[Math.floor(Math.random() * channelNames.length)];
      const randomThumbnail = thumbnails[Math.floor(Math.random() * thumbnails.length)];
      const isVerified = Math.random() < 0.8; // 80% —à–∞–Ω—Å –±—ã—Ç—å –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
      
      recommendations.push({
        id: `rec-${videoId}`,
        title: `${randomTitle} #${videoId}`,
        description: `–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–∞—à–∏—Ö –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –∏ –∏—Å—Ç–æ—Ä–∏–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤. –í–∏–¥–µ–æ ${videoId} –∏–∑ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.`,
        thumbnailUrl: randomThumbnail,
        videoUrl: `https://example.com/recommendation/${videoId}`,
        duration: `${Math.floor(Math.random() * 45) + 5}:${Math.floor(Math.random() * 60).toString().padStart(2, '0')}`,
        viewCount: Math.floor(Math.random() * 500000) + 5000,
        likeCount: Math.floor(Math.random() * 25000) + 500,
        createdAt: new Date(Date.now() - Math.random() * 30 * 24 * 60 * 60 * 1000).toISOString(), // –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
        isLive: false,
        channel: {
          id: `rec-channel-${videoId}`,
          name: randomChannel,
          avatarUrl: "ü§ñ",
          isVerified,
          subscriberCount: Math.floor(Math.random() * 1000000) + 50000
        }
      });
    }
    
    return recommendations;
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
export const recommendationsApi = new RecommendationsApi();
